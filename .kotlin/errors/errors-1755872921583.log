kotlin version: 2.0.21
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: C:/Users/chuchamtung/AndroidStudioProjects/PlayerApplication/player/src/main/java/org/vlog/app/player/PlayerApp.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:246)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:142)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:148)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:103)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:49)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:675)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1660)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:onCreate visibility:protected modality:OPEN <> ($this:org.vlog.app.player.PlayerActivity, savedInstanceState:android.os.Bundle?) returnType:kotlin.Unit
  overridden:
    protected/*protected and package*/ open fun onCreate (p0: @[EnhancedNullability] android.os.Bundle?): kotlin.Unit declared in androidx.activity.ComponentActivity
  $this: VALUE_PARAMETER name:<this> type:org.vlog.app.player.PlayerActivity
  VALUE_PARAMETER name:savedInstanceState index:0 type:android.os.Bundle?
  BLOCK_BODY
    CALL 'protected/*protected and package*/ open fun onCreate (p0: @[EnhancedNullability] android.os.Bundle?): kotlin.Unit declared in androidx.activity.ComponentActivity' superQualifier='CLASS IR_EXTERNAL_JAVA_DECLARATION_STUB CLASS name:ComponentActivity modality:OPEN visibility:public superTypes:[androidx.core.app.ComponentActivity; androidx.activity.contextaware.ContextAware; androidx.lifecycle.LifecycleOwner; androidx.lifecycle.ViewModelStoreOwner; androidx.lifecycle.HasDefaultViewModelProviderFactory; androidx.savedstate.SavedStateRegistryOwner; androidx.activity.OnBackPressedDispatcherOwner; androidx.activity.result.ActivityResultRegistryOwner; androidx.activity.result.ActivityResultCaller; androidx.core.content.OnConfigurationChangedProvider; androidx.core.content.OnTrimMemoryProvider; androidx.core.app.OnNewIntentProvider; androidx.core.app.OnMultiWindowModeChangedProvider; androidx.core.app.OnPictureInPictureModeChangedProvider; androidx.core.view.MenuHost; androidx.activity.FullyDrawnReporterOwner]' type=kotlin.Unit origin=null
      $this: GET_VAR '<this>: org.vlog.app.player.PlayerActivity declared in org.vlog.app.player.PlayerActivity.onCreate' type=org.vlog.app.player.PlayerActivity origin=null
      p0: GET_VAR 'savedInstanceState: android.os.Bundle? declared in org.vlog.app.player.PlayerActivity.onCreate' type=android.os.Bundle? origin=null
    VAR name:context type:android.content.Context [val]
      CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=android.content.Context origin=GET_PROPERTY
        $this: TYPE_OP type=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal>
          CALL 'public final fun <get-LocalContext> (): androidx.compose.runtime.ProvidableCompositionLocal<android.content.Context> declared in androidx.compose.ui.platform.AndroidCompositionLocals_androidKt' type=androidx.compose.runtime.ProvidableCompositionLocal<android.content.Context> origin=GET_PROPERTY
    VAR PROPERTY_DELEGATE name:repeatMode$delegate type:androidx.compose.runtime.MutableState<org.vlog.app.player.compose.RepeatMode> [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<org.vlog.app.player.compose.RepeatMode> origin=null
        <T>: androidx.compose.runtime.MutableState<org.vlog.app.player.compose.RepeatMode>
        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableState<org.vlog.app.player.compose.RepeatMode>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun onCreate$lambda$0 (): androidx.compose.runtime.MutableState<org.vlog.app.player.compose.RepeatMode> declared in org.vlog.app.player.PlayerActivity' type=kotlin.Function0<androidx.compose.runtime.MutableState<org.vlog.app.player.compose.RepeatMode>> origin=INLINE_LAMBDA reflectionTarget=null
    BLOCK type=kotlin.Unit origin=ARGUMENTS_REORDERING_FOR_CALL
      VAR IR_TEMPORARY_VARIABLE name:tmp0_mediaItems type:kotlin.collections.List<org.vlog.app.player.compose.uri.VideoPlayerMediaItem> [val]
        GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:samplePlayList type:kotlin.collections.List<org.vlog.app.player.compose.uri.VideoPlayerMediaItem> visibility:private [final]' type=kotlin.collections.List<org.vlog.app.player.compose.uri.VideoPlayerMediaItem> origin=null
          receiver: GET_VAR '<this>: org.vlog.app.player.PlayerActivity declared in org.vlog.app.player.PlayerActivity.onCreate' type=org.vlog.app.player.PlayerActivity origin=null
      VAR IR_TEMPORARY_VARIABLE name:tmp1_controllerConfig type:org.vlog.app.player.compose.controller.VideoPlayerControllerConfig [val]
        CALL 'public final fun copy (showSpeedAndPitchOverlay: kotlin.Boolean, showSubtitleButton: kotlin.Boolean, showCurrentTimeAndTotalTime: kotlin.Boolean, showBufferingProgress: kotlin.Boolean, showForwardIncrementButton: kotlin.Boolean, showBackwardIncrementButton: kotlin.Boolean, showBackTrackButton: kotlin.Boolean, showNextTrackButton: kotlin.Boolean, showRepeatModeButton: kotlin.Boolean, showFullScreenButton: kotlin.Boolean, controllerShowTimeMilliSeconds: kotlin.Int, controllerAutoShow: kotlin.Boolean): org.vlog.app.player.compose.controller.VideoPlayerControllerConfig declared in org.vlog.app.player.compose.controller.VideoPlayerControllerConfig' type=org.vlog.app.player.compose.controller.VideoPlayerControllerConfig origin=null
          $this: CALL 'public final fun <get-Default> (): org.vlog.app.player.compose.controller.VideoPlayerControllerConfig declared in org.vlog.app.player.compose.controller.VideoPlayerControllerConfig.Companion' type=org.vlog.app.player.compose.controller.VideoPlayerControllerConfig origin=GET_PROPERTY
            $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:org.vlog.app.player.compose.controller.VideoPlayerControllerConfig.Companion visibility:public [final,static] declared in org.vlog.app.player.compose.controller.VideoPlayerControllerConfig' type=org.vlog.app.player.compose.controller.VideoPlayerControllerConfig.Companion origin=null
          showSpeedAndPitchOverlay: CONST Boolean type=kotlin.Boolean value=true
          showSubtitleButton: CONST Boolean type=kotlin.Boolean value=true
          showCurrentTimeAndTotalTime: CONST Boolean type=kotlin.Boolean value=true
          showBufferingProgress: CONST Boolean type=kotlin.Boolean value=true
          showForwardIncrementButton: CONST Boolean type=kotlin.Boolean value=true
          showBackwardIncrementButton: CONST Boolean type=kotlin.Boolean value=true
          showBackTrackButton: CONST Boolean type=kotlin.Boolean value=true
          showNextTrackButton: CONST Boolean type=kotlin.Boolean value=true
          showRepeatModeButton: CONST Boolean type=kotlin.Boolean value=true
          showFullScreenButton: CONST Boolean type=kotlin.Boolean value=true
          controllerShowTimeMilliSeconds: CONST Int type=kotlin.Int value=5000
          controllerAutoShow: CONST Boolean type=kotlin.Boolean value=true
      VAR IR_TEMPORARY_VARIABLE name:tmp2_repeatMode type:org.vlog.app.player.compose.RepeatMode [val]
        CALL 'private final fun onCreate$lambda$1 ($repeatMode$delegate: androidx.compose.runtime.MutableState<org.vlog.app.player.compose.RepeatMode>): org.vlog.app.player.compose.RepeatMode declared in org.vlog.app.player.PlayerActivity' type=org.vlog.app.player.compose.RepeatMode origin=GET_LOCAL_PROPERTY
          $repeatMode$delegate: GET_VAR 'val repeatMode$delegate: androidx.compose.runtime.MutableState<org.vlog.app.player.compose.RepeatMode> [val] declared in org.vlog.app.player.PlayerActivity.onCreate' type=androidx.compose.runtime.MutableState<org.vlog.app.player.compose.RepeatMode> origin=null
      VAR IR_TEMPORARY_VARIABLE name:tmp3_resizeMode type:org.vlog.app.player.compose.ResizeMode [val]
        GET_FIELD 'FIELD FIELD_FOR_ENUM_ENTRY name:FIT type:org.vlog.app.player.compose.ResizeMode visibility:public [final,static] declared in org.vlog.app.player.compose.ResizeMode' type=org.vlog.app.player.compose.ResizeMode origin=null
      VAR IR_TEMPORARY_VARIABLE name:tmp4_modifier type:androidx.compose.ui.Modifier [val]
        CALL 'public final fun fillMaxSize$default (fraction: kotlin.Float, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=DEFAULT_DISPATCH_CALL
          $receiver: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
          fraction: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
            CONST Float type=kotlin.Float value=0.0
          $mask0: CONST Int type=kotlin.Int value=1
          $handler: CONST Null type=kotlin.Any? value=null
      CALL 'public final fun VideoPlayer$default (modifier: androidx.compose.ui.Modifier?, mediaItems: kotlin.collections.List<org.vlog.app.player.compose.uri.VideoPlayerMediaItem>, autoPlay: kotlin.Boolean, usePlayerController: kotlin.Boolean, controllerConfig: org.vlog.app.player.compose.controller.VideoPlayerControllerConfig?, seekBeforeMilliSeconds: kotlin.Long, seekAfterMilliSeconds: kotlin.Long, repeatMode: org.vlog.app.player.compose.RepeatMode?, resizeMode: org.vlog.app.player.compose.ResizeMode?, volume: kotlin.Float, onCurrentTimeChanged: kotlin.Function1<kotlin.Long, kotlin.Unit>?, fullScreenSecurePolicy: androidx.compose.ui.window.SecureFlagPolicy?, onFullScreenEnter: kotlin.Function0<kotlin.Unit>?, onFullScreenExit: kotlin.Function0<kotlin.Unit>?, defaultFullScreen: kotlin.Boolean, handleAudioFocus: kotlin.Boolean, playerBuilder: @[ExtensionFunctionType] kotlin.Function1<androidx.media3.exoplayer.ExoPlayer.Builder, androidx.media3.exoplayer.ExoPlayer.Builder>?, playerInstance: @[ExtensionFunctionType] kotlin.Function1<androidx.media3.exoplayer.ExoPlayer, kotlin.Unit>?, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in org.vlog.app.player.compose.VideoPlayerKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
        modifier: GET_VAR 'val tmp4_modifier: androidx.compose.ui.Modifier [val] declared in org.vlog.app.player.PlayerActivity.onCreate' type=androidx.compose.ui.Modifier origin=null
        mediaItems: GET_VAR 'val tmp0_mediaItems: kotlin.collections.List<org.vlog.app.player.compose.uri.VideoPlayerMediaItem> [val] declared in org.vlog.app.player.PlayerActivity.onCreate' type=kotlin.collections.List<org.vlog.app.player.compose.uri.VideoPlayerMediaItem> origin=null
        autoPlay: CONST Boolean type=kotlin.Boolean value=false
        usePlayerController: CONST Boolean type=kotlin.Boolean value=true
        controllerConfig: GET_VAR 'val tmp1_controllerConfig: org.vlog.app.player.compose.controller.VideoPlayerControllerConfig [val] declared in org.vlog.app.player.PlayerActivity.onCreate' type=org.vlog.app.player.compose.controller.VideoPlayerControllerConfig origin=null
        seekBeforeMilliSeconds: COMPOSITE type=kotlin.Long origin=DEFAULT_VALUE
          CONST Long type=kotlin.Long value=0
        seekAfterMilliSeconds: COMPOSITE type=kotlin.Long origin=DEFAULT_VALUE
          CONST Long type=kotlin.Long value=0
        repeatMode: GET_VAR 'val tmp2_repeatMode: org.vlog.app.player.compose.RepeatMode [val] declared in org.vlog.app.player.PlayerActivity.onCreate' type=org.vlog.app.player.compose.RepeatMode origin=null
        resizeMode: GET_VAR 'val tmp3_resizeMode: org.vlog.app.player.compose.ResizeMode [val] declared in org.vlog.app.player.PlayerActivity.onCreate' type=org.vlog.app.player.compose.ResizeMode origin=null
        volume: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
          CONST Float type=kotlin.Float value=0.0
        onCurrentTimeChanged: BLOCK type=kotlin.Function1<kotlin.Long, kotlin.Unit> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function1<kotlin.Long, kotlin.Unit> origin=null
            <T>: kotlin.Function1<kotlin.Long, kotlin.Unit>
            dynamicCall: CALL 'public final fun invoke (): kotlin.Function1<kotlin.Long, kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function1<kotlin.Long, kotlin.Unit> origin=null
            bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              tag: CONST Int type=kotlin.Int value=6
              owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
              name: CONST String type=kotlin.String value="metafactory"
              descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
              isInterface: CONST Boolean type=kotlin.Boolean value=false
            bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
              RAW_FUNCTION_REFERENCE 'private final fun onCreate$lambda$3 (it: kotlin.Long): kotlin.Unit? declared in org.vlog.app.player.PlayerActivity' type=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: kotlin.Long?): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
        fullScreenSecurePolicy: COMPOSITE type=androidx.compose.ui.window.SecureFlagPolicy? origin=DEFAULT_VALUE
          CONST Null type=androidx.compose.ui.window.SecureFlagPolicy? value=null
        onFullScreenEnter: COMPOSITE type=kotlin.Function0<kotlin.Unit>? origin=DEFAULT_VALUE
          CONST Null type=kotlin.Function0<kotlin.Unit>? value=null
        onFullScreenExit: COMPOSITE type=kotlin.Function0<kotlin.Unit>? origin=DEFAULT_VALUE
          CONST Null type=kotlin.Function0<kotlin.Unit>? value=null
        defaultFullScreen: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
          CONST Boolean type=kotlin.Boolean value=false
        handleAudioFocus: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
          CONST Boolean type=kotlin.Boolean value=false
        playerBuilder: COMPOSITE type=@[ExtensionFunctionType] kotlin.Function1<androidx.media3.exoplayer.ExoPlayer.Builder, androidx.media3.exoplayer.ExoPlayer.Builder>? origin=DEFAULT_VALUE
          CONST Null type=@[ExtensionFunctionType] kotlin.Function1<androidx.media3.exoplayer.ExoPlayer.Builder, androidx.media3.exoplayer.ExoPlayer.Builder>? value=null
        playerInstance: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.media3.exoplayer.ExoPlayer, kotlin.Unit> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=@[ExtensionFunctionType] kotlin.Function1<androidx.media3.exoplayer.ExoPlayer, kotlin.Unit> origin=null
            <T>: @[ExtensionFunctionType] kotlin.Function1<androidx.media3.exoplayer.ExoPlayer, kotlin.Unit>
            dynamicCall: CALL 'public final fun invoke (p0: android.content.Context, p1: androidx.compose.runtime.MutableState<org.vlog.app.player.compose.RepeatMode>): @[ExtensionFunctionType] kotlin.Function1<androidx.media3.exoplayer.ExoPlayer, kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=@[ExtensionFunctionType] kotlin.Function1<androidx.media3.exoplayer.ExoPlayer, kotlin.Unit> origin=null
              p0: GET_VAR 'val context: android.content.Context [val] declared in org.vlog.app.player.PlayerActivity.onCreate' type=android.content.Context origin=null
              p1: GET_VAR 'val repeatMode$delegate: androidx.compose.runtime.MutableState<org.vlog.app.player.compose.RepeatMode> [val] declared in org.vlog.app.player.PlayerActivity.onCreate' type=androidx.compose.runtime.MutableState<org.vlog.app.player.compose.RepeatMode> origin=null
            bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              tag: CONST Int type=kotlin.Int value=6
              owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
              name: CONST String type=kotlin.String value="metafactory"
              descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
              isInterface: CONST Boolean type=kotlin.Boolean value=false
            bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
              RAW_FUNCTION_REFERENCE 'private final fun onCreate$lambda$4 ($context: android.content.Context, $repeatMode$delegate: androidx.compose.runtime.MutableState<org.vlog.app.player.compose.RepeatMode>, $this$VideoPlayer: androidx.media3.exoplayer.ExoPlayer): kotlin.Unit? declared in org.vlog.app.player.PlayerActivity' type=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: androidx.media3.exoplayer.ExoPlayer): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
        $mask0: CONST Int type=kotlin.Int value=129632
        $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:40)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:406)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:423)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:168)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 43 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=android.content.Context origin=GET_PROPERTY
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:163)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:653)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:790)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:579)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:584)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:240)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:123)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:44)
	... 53 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/CompositionLocal;.getCurrent()Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 68 more


